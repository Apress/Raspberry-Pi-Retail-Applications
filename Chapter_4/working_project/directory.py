#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Nov 01, 2021 02:10:43 PM CET  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import directory_support
import os.path

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    root = tk.Tk()
    top = Directory (root)
    directory_support.init(root, top)
    root.mainloop()

w = None
def create_Directory(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Directory(root, *args, **kwargs)' .'''
    global w, w_win, root
    global prog_location
    prog_call = sys.argv[0]
    prog_location = os.path.split(prog_call)[0]
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Directory (w)
    directory_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Directory():
    global w
    w.destroy()
    w = None

class Directory:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("1280x720+183+207")
        top.minsize(1, 1)
        top.maxsize(1905, 1050)
        top.resizable(1,  1)
        top.title("Directory")

        self.map = tk.Label(top)
        self.map.place(relx=0.0, rely=0.0, height=720, width=1280)
        photo_location = os.path.join(prog_location,"../working_project/images/map.png")
        global _img0
        _img0 = tk.PhotoImage(file=photo_location)
        self.map.configure(image=_img0)
        self.map.configure(text='''Label''')

        self.target_button = tk.Button(top)
        target_txt = """Target
Opening 10AM 7PM
Yonge St #17600
915-914-1280
No Curbside Pick Up""" 
        target_btn_x = 0.453
        target_btn_y = 0.306

        self.target_button.place(relx=target_btn_x, rely=target_btn_y, height=20, width=20)
        self.target_button.configure(borderwidth="2")
        self.target_button.configure(cursor="fleur")
        photo_location = os.path.join(prog_location,"../working_project/images/icon_arrowbutton.gif")
        global _img1
        _img1 = tk.PhotoImage(file=photo_location)
        self.target_button.configure(image=_img1)
        self.target_button.configure(text='''Button''')
        self.target_button.configure(text='''Button''', 
                               command = lambda: self.show_label(target_txt, x = target_btn_x - 0.05, y = target_btn_y + 0.05))

        self.sears_button = tk.Button(top)
        sears_txt = """Sears
Opening 9AM 10PM
Yonge St #17600
975-914-1580
Promotion items:""" 
        sears_btn_x = 0.438
        sears_btn_y = 0.722

        self.sears_button.place(relx=sears_btn_x, rely=sears_btn_y, height=20, width=20)
        self.sears_button.configure(activebackground="#f9f9f9")
        self.sears_button.configure(borderwidth="2")
        photo_location = os.path.join(prog_location,"../working_project/images/icon_arrowbutton.gif")
        global _img2
        _img2 = tk.PhotoImage(file=photo_location)
        self.sears_button.configure(image=_img2)
        self.sears_button.configure(text='''Button''')
        self.sears_button.configure(text='''Button''', 
                               command = lambda: self.show_label(sears_txt, x = sears_btn_x - 0.05, y = sears_btn_y + 0.05))

        self.zara_button = tk.Button(top)
        zara_txt = """Zara
Opening 9AM 10PM
Yonge St #17600
975-914-1580
Promotion items:""" 
        zara_btn_x = 0.914
        zara_btn_y = 0.389

        self.zara_button.place(relx=zara_btn_x, rely=zara_btn_y, height=20, width=20)
        self.zara_button.configure(activebackground="#f9f9f9")
        self.zara_button.configure(borderwidth="2")
        photo_location = os.path.join(prog_location,"../working_project/images/icon_arrowbutton.gif")
        global _img3
        _img3 = tk.PhotoImage(file=photo_location)
        self.zara_button.configure(image=_img3)
        self.zara_button.configure(text='''Button''')
        self.zara_button.configure(text='''Button''', 
                               command = lambda: self.show_label(zara_txt, x = zara_btn_x - 0.05, y = zara_btn_y + 0.05))

        self.description_label = tk.Label(top)

        self.description_label.configure(text='''Label''')

    def show_label(self, text, x, y):
        self.description_label.place(relx=x, rely=y, height=100, width=200)
        self.description_label.configure(text=text)

if __name__ == '__main__':
    vp_start_gui()





